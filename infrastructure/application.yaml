Description: OMBU Site / application

Parameters:

  InfrastructureStack:
    Type: String
    Description: |
      The name of the CloudFormation stack that provides the underlying
      resources for the application.

  EnvironmentType:
    Type: String
    Description: The application environment.
    AllowedValues:
      - staging
      - production

  Version:
    Type: String
    Default: 0.1
    Description: The version of the application.

Mappings:

  Environments:

    production:
      DatabaseHost: qa-db-2.cpuj5trym3at.us-west-2.rds.amazonaws.com
      DatabaseName: ombusite_production
      DatabaseUser: ombusite_production
      Domain: beta.ombuweb.com
      ListernerPriority: 100

    staging:
      DatabaseHost: qa-db-2.cpuj5trym3at.us-west-2.rds.amazonaws.com
      DatabaseName: ombusite_staging
      DatabaseUser: ombusite_staging
      Domain: staging.ombuweb.com
      ListernerPriority: 101

Resources:

  DefaultRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${AWS::StackName}-ECSDefaultService
      Path: /
      AssumeRolePolicyDocument: |
        {
            "Statement": [{
                "Effect": "Allow",
                "Principal": { "Service": [ "ecs.amazonaws.com" ]},
                "Action": [ "sts:AssumeRole" ]
            }]
        }
      Policies:
      - PolicyName: !Sub ecs-service-${AWS::StackName}
        PolicyDocument:
          {
            "Version": "2012-10-17",
            "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "ec2:AuthorizeSecurityGroupIngress",
                "ec2:Describe*",
                "elasticloadbalancing:DeregisterInstancesFromLoadBalancer",
                "elasticloadbalancing:Describe*",
                "elasticloadbalancing:RegisterInstancesWithLoadBalancer",
                "elasticloadbalancing:DeregisterTargets",
                "elasticloadbalancing:DescribeTargetGroups",
                "elasticloadbalancing:DescribeTargetHealth",
                "elasticloadbalancing:RegisterTargets"
              ],
              "Resource": "*"
            }
            ]
          }

  Django:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: services/django.yaml
      Parameters:
        AppVersion: !Ref Version
        Cluster:
          Fn::ImportValue:
            !Sub "${InfrastructureStack}-Cluster"
        DatabaseHost: !FindInMap [ Environments, !Ref EnvironmentType, DatabaseHost ]
        DatabaseName: !FindInMap [ Environments, !Ref EnvironmentType, DatabaseName ]
        DatabaseUser: !FindInMap [ Environments, !Ref EnvironmentType, DatabaseUser ]
        DatabasePassword: !Sub /ombusite/${EnvironmentType}/database_password
        Domain:  !FindInMap [ Environments, !Ref EnvironmentType, Domain ]
        EnvironmentType: !Ref EnvironmentType
        Listener:
          Fn::ImportValue:
            !Sub "${InfrastructureStack}-Listener"
        Priority: !FindInMap [ Environments, !Ref EnvironmentType, ListernerPriority ]
        RoleArn: !Ref DefaultRole
        VPC:
          Fn::ImportValue:
            !Sub "${InfrastructureStack}-VPC"


  CloudFormationServiceRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: cloudformation.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Resource: "*"
                Effect: Allow
                Action:
                  - cloudformation:*
                  - ec2:*
                  - ecs:*
                  - s3:GetObject
              #- Resource: !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:ombusite/*"
              - Resource: "*"
                Effect: Allow
                Action:
                  - ssm:GetParameters
Outputs:

  CloudFormationServiceRoleArn:
    Description: >
      A service role other stacks (i.e. pipelines) may use to update this application.
    Value: !GetAtt CloudFormationServiceRole.Arn
    Export:
      Name: !Sub ${AWS::StackName}-CloudFormationServiceRoleArn

  DjangoServiceName:
    Description: The name the created Elasticsearch service
    Value: !GetAtt Django.Outputs.ServiceName
    Export:
      Name: !Sub ${AWS::StackName}-DjangoServiceName
